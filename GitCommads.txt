git merge --abort    ==to abort git merge 

 Basic setup & config
 | Command                                  | Purpose            |
| ---------------------------------------- | ------------------ |
| `git init`                               | Initialize a repo  |
| `git clone <url>`                        | Copy a remote repo |
| `git config --global user.name "Name"`   | Set username       |
| `git config --global user.email "email"` | Set email          |

2. Staging & committing
| Command               | Purpose             |
| --------------------- | ------------------- |
| `git status`          | Check repo state    |
| `git add <file>`      | Stage file(s)       |
| `git add .`           | Stage all           |
| `git commit -m "msg"` | Commit staged files |
| `git log`             | Show commit history |

3. Branching
| Command                  | Purpose                     |
| ------------------------ | --------------------------- |
| `git branch`             | List branches               |
| `git branch <name>`      | Create branch               |
| `git checkout <name>`    | Switch branch               |
| `git checkout -b <name>` | Create + switch             |
| `git merge <branch>`     | Merge a branch into current |

4. Sync with remote
| Command                    | Purpose                               |
| -------------------------- | ------------------------------------- |
| `git remote -v`            | Show remote repos                     |
| `git push origin <branch>` | Push local branch to remote           |
| `git pull origin <branch>` | Get remote changes & merge            |
| `git fetch`                | Get remote changes only (donâ€™t merge) |

 5.Undo & fix
| Command                     | Purpose                                  |
| --------------------------- | ---------------------------------------- |
| `git diff`                  | See unstaged changes                     |
| `git reset <file>`          | Unstage a file                           |
| `git checkout -- <file>`    | Discard local changes                    |
| `git revert <commit>`       | Undo a commit (safe for shared branches) |
| `git reset --hard <commit>` | Force reset HEAD (dangerous!)            |

6. Resolve conflicts
| Command              | Purpose                       |
| -------------------- | ----------------------------- |
| `git merge <branch>` | If conflict, resolve manually |
| `git status`         | See conflict files            |
| `git add <file>`     | Mark conflict resolved        |
| `git commit`         | Finish merge                  |

| Command          | Purpose                         |
| ---------------- | ------------------------------- |
| `git stash`      | Save local changes temporarily  |
| `git stash pop`  | Reapply stashed changes         |
| `git tag <name>` | Mark a commit (release version) |
